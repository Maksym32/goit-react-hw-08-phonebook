{"version":3,"file":"static/js/237.d1910bc2.chunk.js","mappings":"yOAGaA,EAAS,WAEpB,IAAMC,GAAWC,EAAAA,EAAAA,MAQjB,OACE,4BACE,mDACE,kBACEC,KAAK,OACLC,KAAM,SACNC,SAZa,SAAAC,GACnBL,GAASM,EAAAA,EAAAA,IACPD,EAAIE,cAAcC,MAAMC,cAAcC,QAEzC,MAWF,E,mBCbYC,GAPiBC,EAAAA,GAAAA,IAAH,qHAOHA,EAAAA,GAAAA,GAAH,4IASRC,EAASD,EAAAA,GAAAA,KAAH,8DAINE,EAASF,EAAAA,GAAAA,OAAH,6CAGNG,EAAOH,EAAAA,GAAAA,GAAH,qC,UCnBV,SAASI,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QACpBjB,GAAWC,EAAAA,EAAAA,MAIjB,OACI,UAACU,EAAD,WACKM,EAAQd,KADb,MACoB,SAACU,EAAD,UAASI,EAAQC,UACjC,SAACJ,EAAD,CAAQZ,KAAK,SAASiB,QALT,kBAAMnB,GAASoB,EAAAA,EAAAA,IAAcH,EAAQI,IAArC,EAKb,sBAGX,CCjBM,I,IAAMC,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACnBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEpBC,EAAY,SAAAL,GAAK,OAAIA,EAAMM,OAAOC,MAAjB,ECGjBC,EAAc,WACvB,IAAMP,GAAWQ,EAAAA,EAAAA,IAAYV,GACvBW,GAAgBD,EAAAA,EAAAA,IAAYJ,GAClCM,QAAQC,IAAIF,GAEZ,IAQMG,EARuB,WACzB,IAAMC,EAAeJ,EAAcxB,cAAcC,OAEjD,GAAIc,EACA,OAAOA,EAASK,QAAO,SAAAZ,GAAO,OAAIA,EAAQd,KAAKM,cAAc6B,SAASD,EAAxC,GAErC,CAEkBE,GAEnB,OACI,iCACA,eAAIC,MAAO,CAAEC,UAAW,UAAxB,2BACA,SAAC1B,EAAD,UACKqB,EACGA,EAAWM,KAAI,SAACzB,EAAS0B,GAAV,OACX,SAAC3B,EAAD,CAA8BC,QAASA,EAAS0B,IAAKA,GAAnC1B,EAAQI,GADf,KAGb,+CAIjB,ECtBYuB,GARehC,EAAAA,GAAAA,IAAH,iJAQAA,EAAAA,GAAAA,MAAH,wFCLTiC,EAAY,WACrB,IAAMrB,GAAWQ,EAAAA,EAAAA,IAAYV,GACvBtB,GAAWC,EAAAA,EAAAA,MAkBb,OACI,kBAAO6C,SAjBA,SAACC,GAChBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,OACT/C,EAAO8C,EAAKE,SAAShD,KAAKK,MAC1BU,EAAS+B,EAAKE,SAASjC,OAAOV,MAEhCgB,IACFA,EAAS4B,MAAK,SAAAnC,GAAO,OAAIA,EAAQd,KAAKM,gBAAkBN,EAAKM,aAAxC,IACjB4C,MAAMlD,EAAO,2BACbH,GAASsD,EAAAA,EAAAA,IAAW,CAAEnD,KAAAA,EAAMe,OAAAA,MAIlC+B,EAAKM,OACN,EAES,WACA,qCAEI,SAACX,EAAD,CACI1C,KAAK,OACLC,KAAK,OACLqD,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGhB,uCAEE,SAACd,EAAD,CACM1C,KAAK,MACLC,KAAK,SACLqD,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGR,mBAAQxD,KAAK,SAAb,2BAKnB,EC7Cc,SAASyD,IACtB,IAAM3D,GAAWC,EAAAA,EAAAA,MACX0B,GAAYK,EAAAA,EAAAA,IAAYN,GAM9B,OAJAkC,EAAAA,EAAAA,YAAU,WACR5D,GAAS6D,EAAAA,EAAAA,MACV,GAAE,CAAC7D,KAGF,iCACE,SAAC6C,EAAD,KACA,SAAC9C,EAAD,KACA,yBAAM4B,GAAa,4BACnB,SAACI,EAAD,MAGL,C","sources":["components/Filter/Filter.js","components/Contacts/ContactList.styled.js","components/Contacts/ContactItem.js","Redux/contacts/selectors.js","components/Contacts/ContactList.js","components/Form/Form.styled.js","components/Form/Form.js","Pages/Contacts.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { setStatusFilter } from '../../Redux/filterSlice';\n\nexport const Filter = () => {\n\n  const dispatch = useDispatch();\n\n  const changeFilter = evt => {\n    dispatch(setStatusFilter(\n      evt.currentTarget.value.toLowerCase().trim()\n    ));\n  };\n\n  return (\n    <div>\n      <h3>Find contacts by name</h3>\n        <input\n          type=\"text\"\n          name= \"filter\"\n          onChange={changeFilter} />\n        </div>\n    )\n}","import styled from 'styled-components';\n\nexport const ContactListBox = styled.div`\nmargin: 10px;\npadding: 10px;\nwidth: 320px;\nborder: 1px solid black;\nborder-radius: 5px;\n`\nexport const ListItem = styled.li`\ndisplay: flex;\nlist-style: none;\nmargin: 5px;\nmax-width: 320px;\nbackground-color: white;\nborder-radius: 2px;\n`\n\nexport const TelNum = styled.span`\nmargin-left: 5px;\nfont-weight: 700;\n`\nexport const DelBtn = styled.button`\nmargin-left: auto; \n`\nexport const List = styled.ul`\npadding: 0;\n`","import { ListItem, TelNum, DelBtn } from \"./ContactList.styled\";\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from \"../../Redux/contacts/operations\";\n\n\nexport function ContactItem({ contact }) {\n    const dispatch = useDispatch();\n\n    const handleDelete = () => dispatch(deleteContact(contact.id));\n\n    return (\n        <ListItem>\n            {contact.name}: <TelNum>{contact.number}</TelNum>\n            <DelBtn type=\"button\" onClick={handleDelete}>Delete</DelBtn>\n        </ListItem>\n    )\n}\nContactItem.propTypes = {\n    contact: PropTypes.object,\n    idx: PropTypes.number,\n}","export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.filter.status;","import { ContactItem } from \"./ContactItem\";\nimport PropTypes from 'prop-types';\nimport { List } from \"./ContactList.styled\"\nimport {  useSelector } from \"react-redux\";\nimport { getContacts,getFilter } from \"../../Redux/contacts/selectors\";\n\nexport const ContactList = () => {\n    const contacts = useSelector(getContacts);\n    const filterContact = useSelector(getFilter);\n    console.log(filterContact);\n\n    const getVisibleNameFilter = () => {\n        const normalFilter = filterContact.toLowerCase().trim();\n        \n        if (contacts) {\n            return contacts.filter(contact => contact.name.toLowerCase().includes(normalFilter))\n        }\n    }\n\n    const filterName = getVisibleNameFilter();\n\n    return (\n        <>\n        <h2 style={{ textAlign: 'center' }}>Contact List</h2>\n        <List>\n            {filterName ?\n                filterName.map((contact, idx) => (\n                    <ContactItem key={contact.id} contact={contact} idx={idx} />\n                ))\n                : <p>No any contacts</p>}\n        </List>  \n        </>\n    )\n}\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object),\n}","import styled from 'styled-components';\n\n\nexport const InputFormBox = styled.div`\npadding: 10px;\nmargin: 10px;\nwidth: 320px;\nborder: 1px solid black;\nborder-radius: 5px;\nbackground-color: #68829e;\n`\nexport const InputItem = styled.input`\ndisplay: flex;\nflex-direction: column;\nmargin-bottom: 10px;\n`\n","import { useSelector, useDispatch } from 'react-redux';\nimport { InputItem } from \"./Form.styled\";\nimport { getContacts } from '../../Redux/contacts/selectors';\nimport { addContact } from '../../Redux/contacts/operations';\n\n\nexport const InputForm = () => {\n    const contacts = useSelector(getContacts);\n    const dispatch = useDispatch();\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    \n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n  \n    if (contacts) {\n      contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())\n        ? alert(name + ' is already in contacts')\n        : dispatch(addContact({ name, number }))\n    }\n  \n\n    form.reset();\n  };\n        return (\n            <form  onSubmit={onSubmit}>\n            <label>\n              Name\n                <InputItem\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n              />\n            </label>\n            <label>\n              Number\n              <InputItem\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n              />\n            </label>\n                    <button type=\"submit\">Add contact</button>\n                \n            </form>\n        )\n\n}","import { useEffect } from 'react';\nimport {Filter} from '../components/Filter/Filter'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from '../components/Contacts/ContactList';\nimport { InputForm } from '../components/Form/Form';\nimport { fetchContacts } from '../Redux/contacts/operations';\nimport { getIsLoading } from '../Redux/contacts/selectors';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <InputForm />\n      <Filter/>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n}"],"names":["Filter","dispatch","useDispatch","type","name","onChange","evt","setStatusFilter","currentTarget","value","toLowerCase","trim","ListItem","styled","TelNum","DelBtn","List","ContactItem","contact","number","onClick","deleteContact","id","getContacts","state","contacts","items","getIsLoading","isLoading","getFilter","filter","status","ContactList","useSelector","filterContact","console","log","filterName","normalFilter","includes","getVisibleNameFilter","style","textAlign","map","idx","InputItem","InputForm","onSubmit","e","preventDefault","form","target","elements","find","alert","addContact","reset","pattern","title","required","Phonebook","useEffect","fetchContacts"],"sourceRoot":""}